// Code generated by protoc-gen-go. DO NOT EDIT.
// source: item.proto

package item

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ItemRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemRequest) Reset()         { *m = ItemRequest{} }
func (m *ItemRequest) String() string { return proto.CompactTextString(m) }
func (*ItemRequest) ProtoMessage()    {}
func (*ItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6007f868cf6553df, []int{0}
}

func (m *ItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemRequest.Unmarshal(m, b)
}
func (m *ItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemRequest.Marshal(b, m, deterministic)
}
func (m *ItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemRequest.Merge(m, src)
}
func (m *ItemRequest) XXX_Size() int {
	return xxx_messageInfo_ItemRequest.Size(m)
}
func (m *ItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ItemRequest proto.InternalMessageInfo

func (m *ItemRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ItemReply struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExpiresAt            int32    `protobuf:"varint,3,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	Completed            bool     `protobuf:"varint,4,opt,name=completed,proto3" json:"completed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemReply) Reset()         { *m = ItemReply{} }
func (m *ItemReply) String() string { return proto.CompactTextString(m) }
func (*ItemReply) ProtoMessage()    {}
func (*ItemReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_6007f868cf6553df, []int{1}
}

func (m *ItemReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemReply.Unmarshal(m, b)
}
func (m *ItemReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemReply.Marshal(b, m, deterministic)
}
func (m *ItemReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemReply.Merge(m, src)
}
func (m *ItemReply) XXX_Size() int {
	return xxx_messageInfo_ItemReply.Size(m)
}
func (m *ItemReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemReply.DiscardUnknown(m)
}

var xxx_messageInfo_ItemReply proto.InternalMessageInfo

func (m *ItemReply) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ItemReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ItemReply) GetExpiresAt() int32 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *ItemReply) GetCompleted() bool {
	if m != nil {
		return m.Completed
	}
	return false
}

func init() {
	proto.RegisterType((*ItemRequest)(nil), "item.ItemRequest")
	proto.RegisterType((*ItemReply)(nil), "item.ItemReply")
}

func init() { proto.RegisterFile("item.proto", fileDescriptor_6007f868cf6553df) }

var fileDescriptor_6007f868cf6553df = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0x3d, 0xcb, 0xc2, 0x30,
	0x14, 0x85, 0xdf, 0xf4, 0x8d, 0x1f, 0xbd, 0x8a, 0x62, 0xa6, 0xe0, 0x07, 0x94, 0x4e, 0x9d, 0x2a,
	0xe8, 0xe0, 0x6c, 0x17, 0x71, 0x2b, 0xf9, 0x07, 0xda, 0x5e, 0x24, 0xd8, 0x98, 0xd8, 0x46, 0xb0,
	0xff, 0x5e, 0x12, 0x87, 0x16, 0xb7, 0xc3, 0x79, 0x2e, 0xdc, 0xe7, 0x00, 0x48, 0x8b, 0x2a, 0x35,
	0xb5, 0xb6, 0x9a, 0x51, 0x97, 0xe3, 0x0d, 0x4c, 0xce, 0x16, 0x95, 0xc0, 0xe7, 0x0b, 0x1b, 0xcb,
	0x66, 0x10, 0xc8, 0x92, 0x93, 0x88, 0x24, 0x03, 0x11, 0xc8, 0x32, 0xbe, 0x43, 0xf8, 0xc5, 0xa6,
	0x6a, 0x7f, 0x21, 0x63, 0x40, 0x1f, 0x17, 0x85, 0x3c, 0x88, 0x48, 0x12, 0x0a, 0x9f, 0xd9, 0x1a,
	0x42, 0x7c, 0x1b, 0x59, 0x63, 0x73, 0xb4, 0xfc, 0xdf, 0x9f, 0x76, 0x85, 0xa3, 0x85, 0x56, 0xa6,
	0x42, 0x8b, 0x25, 0xa7, 0x11, 0x49, 0xc6, 0xa2, 0x2b, 0x76, 0x07, 0xa0, 0xee, 0x19, 0xdb, 0xc2,
	0xe8, 0x84, 0xd6, 0xc7, 0x45, 0xea, 0x8d, 0x7b, 0x8a, 0xcb, 0x79, 0xbf, 0x32, 0x55, 0x1b, 0xff,
	0x65, 0x2b, 0x98, 0x4a, 0x9d, 0xde, 0x6a, 0x53, 0x78, 0x96, 0x79, 0xe7, 0xdc, 0xad, 0xcc, 0xc9,
	0x75, 0xe8, 0xe7, 0xee, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x8c, 0xae, 0xaf, 0xfc, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ItemClient is the client API for Item service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ItemClient interface {
	// Sends a greeting
	GetItem(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*ItemReply, error)
}

type itemClient struct {
	cc *grpc.ClientConn
}

func NewItemClient(cc *grpc.ClientConn) ItemClient {
	return &itemClient{cc}
}

func (c *itemClient) GetItem(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*ItemReply, error) {
	out := new(ItemReply)
	err := c.cc.Invoke(ctx, "/item.Item/GetItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ItemServer is the server API for Item service.
type ItemServer interface {
	// Sends a greeting
	GetItem(context.Context, *ItemRequest) (*ItemReply, error)
}

// UnimplementedItemServer can be embedded to have forward compatible implementations.
type UnimplementedItemServer struct {
}

func (*UnimplementedItemServer) GetItem(ctx context.Context, req *ItemRequest) (*ItemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItem not implemented")
}

func RegisterItemServer(s *grpc.Server, srv ItemServer) {
	s.RegisterService(&_Item_serviceDesc, srv)
}

func _Item_GetItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServer).GetItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/item.Item/GetItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServer).GetItem(ctx, req.(*ItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Item_serviceDesc = grpc.ServiceDesc{
	ServiceName: "item.Item",
	HandlerType: (*ItemServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetItem",
			Handler:    _Item_GetItem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "item.proto",
}
